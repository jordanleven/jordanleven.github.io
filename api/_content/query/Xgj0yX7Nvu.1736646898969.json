{"_path":"/projects/imodules-cache","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"iModules Cache","description":"Powering the University of Virginia's central giving websites is the iModules Caching System, an automated system designed to securely collect and encrypt gifts made to the University through the iModules donation platform. The system reports real-time gift information through a series of ReSTful APIs, providing data to some of our most compelling sites and storing information for over fifty-million dollars in transactions.","projectDate":"2017-04-01T00:00:00-05:00","postDate":"2020-07-16T00:00:00-05:00","backgroundImage":"/images/projects/imodules-cache/blue-checker-background.png","screenshotImage":"/images/projects/imodules-cache/hero.png","shortIntro":true,"summary":"The caching system behind UVA's giving sites responsible for securely storing fundraising data.","thumbnail":"/images/projects/imodules-cache/thumbnail.png","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Powering the University of Virginia's central giving websites is the iModules Caching System, an automated system designed to securely collect and encrypt gifts made to the University through the iModules donation platform. The system reports real-time gift information through a series of ReSTful APIs, providing data to some of our most compelling sites and storing information for over fifty-million dollars in transactions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The system, which runs every five minutes, automatically determines the correct date and time parameters to return data based on previous successful calls. Using the SOAP protocol, the system returns donation data as XML, de-duplicates data, assigns unique IDs, and encrypts and stores values."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The system is also designed to be expandable for developers. Developers can easily add or extend their own functionality during the caching process using a series of predefined hooks. At the University of Virginia, we utilize the hook functionality to execute additional calls to the iModules API and send email notifications to UVA fundraisers using Amazon Web Services' Simple Email Service."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:projects:imodules-cache.md","_source":"content","_file":"projects/imodules-cache.md","_stem":"projects/imodules-cache","_extension":"md"}