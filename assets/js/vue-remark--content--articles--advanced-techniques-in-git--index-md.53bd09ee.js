(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{UQSp:function(t,o,e){"use strict";o.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},dwsK:function(t,o,e){"use strict";e.r(o);var n=e("7uw+"),i=e("UQSp"),r=e("Kw5r");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}r.default.config.optionMergeStrategies;var a={VueRemarkRoot:i.a},c=function(t){var o=t.options.components=t.options.components||{},e=t.options.computed=t.options.computed||{};Object.keys(a).forEach((function(t){"object"===u(a[t])&&"function"==typeof a[t].render||"function"==typeof a[t]&&"function"==typeof a[t].options.render?o[t]=a[t]:e[t]=function(){return a[t]}}))},s=r.default.config.optionMergeStrategies,l="__vueRemarkFrontMatter",p={excerpt:null,title:"Advanced Techniques in Git",publicationDate:"2022-02-09T05:00:00.000Z",summary:"Your codebase is a untapped trove of context and evolution. Learn how to use Git's interactive rebasing to take control of your repository and edit your commit history.",thumbnail:"./images/thumbnail.png",articleUrl:"https://sparkbox.com/foundry/advanced_git_techniques_rebasing_interactive_rebase_with_git"};var f=function(t){t.options[l]&&(t.options[l]=p),r.default.util.defineReactive(t.options,l,p),t.options.computed=s.computed({$frontmatter:function(){return t.options[l]}},t.options.computed)},y=Object(n.a)({},(function(){var t=this.$createElement,o=this._self._c||t;return o("VueRemarkRoot",[o("p",[this._v("Git is so much more than a chronological ledger of changes. You might use Git as a collaboration tool to synchronize code changes between developers, but are you capturing the growth of your codebase? In this article, I'll go over techniques that you can use in your projects to elevate the history of your codebase as a valuable source of context and evolution.")]),o("p",[this._v("In this article, I talk about how you can use interactive rebasing to carefully edit the history of your commits in way that showcases the evolution of your codebase.")])])}),[],!1,null,null,null);"function"==typeof c&&c(y),"function"==typeof f&&f(y);o.default=y.exports}}]);